{"ast":null,"code":"import _slicedToArray from\"/Users/Kevin/Documents/GitHub 2/Official-Website/simlabs-webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{ButtonA}from'../ButtonElements';import{InfoContainer,InfoWrapper,InfoRow,Column1,Column2,TextWrapper,InfoH1,Heading,Subtitle,BtnWrap,ImgWrap,Img,ImgLogo}from'./infoElements';var InfoSection=function InfoSection(_ref){var lightBg=_ref.lightBg,id=_ref.id,imgStart=_ref.imgStart,lightText=_ref.lightText,darkText=_ref.darkText,description=_ref.description,buttonlabel=_ref.buttonlabel,img=_ref.img,alt=_ref.alt;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hover=_useState2[0],setHover=_useState2[1];var onHover=function onHover(){setHover(!hover);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(InfoContainer,{lightBg:lightBg,id:id},/*#__PURE__*/React.createElement(InfoH1,null,\"Portfolio\"),/*#__PURE__*/React.createElement(InfoWrapper,null,/*#__PURE__*/React.createElement(InfoRow,{imgStart:imgStart},/*#__PURE__*/React.createElement(Column1,null,/*#__PURE__*/React.createElement(TextWrapper,null,/*#__PURE__*/React.createElement(Heading,{lightText:lightText},/*#__PURE__*/React.createElement(ImgLogo,{src:require(\"../../images/logo.png\")})),/*#__PURE__*/React.createElement(Subtitle,{darkText:darkText},description),/*#__PURE__*/React.createElement(BtnWrap,null,/*#__PURE__*/React.createElement(ButtonA,{href:\"//cryptopresis.simlabs.io/\",target:\"_blank\",onMouseEnter:onHover,onMouseLeave:onHover,primary:\"true\",dark:\"true\"},buttonlabel)))),/*#__PURE__*/React.createElement(Column2,null,/*#__PURE__*/React.createElement(ImgWrap,null,/*#__PURE__*/React.createElement(Img,{src:img,alt:alt})))))));};export default InfoSection;","map":{"version":3,"sources":["/Users/Kevin/Documents/GitHub 2/Official-Website/simlabs-webpage/src/components/InfoSection/index.js"],"names":["React","useState","ButtonA","InfoContainer","InfoWrapper","InfoRow","Column1","Column2","TextWrapper","InfoH1","Heading","Subtitle","BtnWrap","ImgWrap","Img","ImgLogo","InfoSection","lightBg","id","imgStart","lightText","darkText","description","buttonlabel","img","alt","hover","setHover","onHover","require"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OACIC,aADJ,CAEIC,WAFJ,CAGIC,OAHJ,CAIIC,OAJJ,CAKIC,OALJ,CAMIC,WANJ,CAOIC,MAPJ,CAQIC,OARJ,CASIC,QATJ,CAUIC,OAVJ,CAWIC,OAXJ,CAYIC,GAZJ,CAaIC,OAbJ,KAcO,gBAdP,CAgBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAUd,IATFC,CAAAA,OASE,MATFA,OASE,CARFC,EAQE,MARFA,EAQE,CAPFC,QAOE,MAPFA,QAOE,CANFC,SAME,MANFA,SAME,CALFC,QAKE,MALFA,QAKE,CAJFC,WAIE,MAJFA,WAIE,CAHFC,WAGE,MAHFA,WAGE,CAFFC,GAEE,MAFFA,GAEE,CADFC,GACE,MADFA,GACE,CAEF,cAA0BxB,QAAQ,CAAC,KAAD,CAAlC,wCAAOyB,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClBD,QAAQ,CAAC,CAACD,KAAF,CAAR,CACH,CAFD,CAIA,mBACI,qDACI,oBAAC,aAAD,EAAe,OAAO,CAAET,OAAxB,CAAiC,EAAE,CAAEC,EAArC,eACI,oBAAC,MAAD,kBADJ,cAEI,oBAAC,WAAD,mBACI,oBAAC,OAAD,EAAS,QAAQ,CAAEC,QAAnB,eACI,oBAAC,OAAD,mBACI,oBAAC,WAAD,mBACI,oBAAC,OAAD,EAAS,SAAS,CAAEC,SAApB,eACI,oBAAC,OAAD,EAAS,GAAG,CAAES,OAAO,CAAC,uBAAD,CAArB,EADJ,CADJ,cAII,oBAAC,QAAD,EAAU,QAAQ,CAAER,QAApB,EAA+BC,WAA/B,CAJJ,cAKI,oBAAC,OAAD,mBACI,oBAAC,OAAD,EAAS,IAAI,CAAC,4BAAd,CAA2C,MAAM,CAAC,QAAlD,CACA,YAAY,CAAEM,OADd,CAEA,YAAY,CAAEA,OAFd,CAGA,OAAO,CAAC,MAHR,CAIA,IAAI,CAAC,MAJL,EAMKL,WANL,CADJ,CALJ,CADJ,CADJ,cAmBI,oBAAC,OAAD,mBACI,oBAAC,OAAD,mBACI,oBAAC,GAAD,EAAK,GAAG,CAAEC,GAAV,CAAe,GAAG,CAAEC,GAApB,EADJ,CADJ,CAnBJ,CADJ,CAFJ,CADJ,CADJ,CAkCH,CApDD,CAsDA,cAAeT,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ButtonA } from '../ButtonElements';\nimport {\n    InfoContainer, \n    InfoWrapper, \n    InfoRow, \n    Column1, \n    Column2, \n    TextWrapper,\n    InfoH1,\n    Heading, \n    Subtitle,\n    BtnWrap,\n    ImgWrap,\n    Img,\n    ImgLogo\n} from './infoElements';\n\nconst InfoSection = ({\n    lightBg,\n    id, \n    imgStart, \n    lightText, \n    darkText, \n    description, \n    buttonlabel, \n    img, \n    alt\n}) => {\n\n    const [hover, setHover] = useState(false)\n\n    const onHover = () => {\n        setHover(!hover);\n    };\n\n    return (\n        <>\n            <InfoContainer lightBg={lightBg} id={id}>\n                <InfoH1>Portfolio</InfoH1>\n                <InfoWrapper>\n                    <InfoRow imgStart={imgStart}>\n                        <Column1>\n                            <TextWrapper>\n                                <Heading lightText={lightText}>\n                                    <ImgLogo src={require(\"../../images/logo.png\")}/>\n                                </Heading>\n                                <Subtitle darkText={darkText}>{description}</Subtitle>\n                                <BtnWrap>\n                                    <ButtonA href='//cryptopresis.simlabs.io/' target=\"_blank\"\n                                    onMouseEnter={onHover} \n                                    onMouseLeave={onHover}\n                                    primary='true'\n                                    dark='true'\n                                    >\n                                        {buttonlabel}\n                                    </ButtonA>\n                                </BtnWrap>\n                            </TextWrapper>\n                        </Column1>\n                        <Column2>\n                            <ImgWrap>\n                                <Img src={img} alt={alt}/>\n                            </ImgWrap>\n                        </Column2>\n                    </InfoRow>\n                </InfoWrapper>\n            </InfoContainer>\n        </>\n    )\n}\n\nexport default InfoSection\n"]},"metadata":{},"sourceType":"module"}